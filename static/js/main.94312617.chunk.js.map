{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","isCustomSize","setIsCustomSize","isCustomFps","setIsCustomFps","fps","setFps","width","setWidth","height","setHeight","extension","setExtension","preset","setPreset","crfValue","setCrfValue","progress","setProgress","message","setMessage","uploaderEl","useRef","a","current","console","error","files","ffmpeg","createFFmpeg","log","ratio","file","load","name","fetchFile","FS","ffmpegArguments","push","toString","outputFileName","run","data","document","createElement","url","URL","createObjectURL","Blob","buffer","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","className","type","accept","ref","value","checked","onChange","event","disabled","target","valueAsNumber","min","max","onClick","preventDefault","handleConvert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94312617.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\n\nfunction App() {\n  const [isCustomSize, setIsCustomSize] = useState(false);\n  const [isCustomFps, setIsCustomFps] = useState(false);\n  const [fps, setFps] = useState(0);\n  const [width, setWidth] = useState(-1);\n  const [height, setHeight] = useState(-1);\n  const [extension, setExtension] = useState(\"mp4\");\n  const [preset, setPreset] = useState(\"medium\");\n  const [crfValue, setCrfValue] = useState(23);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"\");\n\n  const uploaderEl = useRef<HTMLInputElement>(null);\n\n  async function handleConvert() {\n    if (!uploaderEl.current) {\n      console.error(\"Upload file element is null\");\n      return;\n    }\n\n    if (!uploaderEl.current.files || !uploaderEl.current.files[0]) {\n      console.error(\"No files uploaded\");\n      return;\n    }\n\n    const ffmpeg = createFFmpeg({\n      log: true,\n      progress: ({ ratio }) => {\n        setProgress(ratio);\n      },\n    });\n\n    const file = uploaderEl.current.files[0];\n    setMessage('Loading...');\n    await ffmpeg.load();\n\n    setMessage('Transcoding...');\n    ffmpeg.FS('writeFile', file.name, await fetchFile(file));\n\n    const ffmpegArguments = ['-i', file.name];\n    if (isCustomFps) {\n      ffmpegArguments.push('-r', fps.toString());\n    }\n    if (isCustomSize) {\n      ffmpegArguments.push('-vf', `scale=${width}:${height}`);\n    }\n    const outputFileName = `output.${extension}`;\n    ffmpegArguments.push('-crf', crfValue.toString(), '-preset', preset, outputFileName);\n    console.log(ffmpegArguments);\n    await ffmpeg.run(...ffmpegArguments);\n\n    setMessage('Complete transcoding');\n    const data = ffmpeg.FS('readFile', outputFileName);\n    const a = document.createElement(\"a\");\n    const url = URL.createObjectURL(new Blob([data.buffer]));\n    a.href = url;\n    a.download = outputFileName;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(function () {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 0);\n  }\n\n  return (\n    <div className=\"App\">\n      <form>\n        <div>\n          <label> Choose a video file:\n            <input type=\"file\" accept=\"video/*,image/gif\" ref={uploaderEl} />\n          </label>\n        </div>\n        {message && <div>{message}</div>}\n        {progress !== 0 && <progress value={progress} />}\n        <div>\n          FPS:\n          <label> Same as source\n            <input type=\"checkbox\" checked={!isCustomFps} onChange={event => setIsCustomFps(!isCustomFps)} />\n          </label>\n          <input type=\"number\" disabled={!isCustomFps} name=\"fps\" value={fps} onChange={event => setFps(event.target.valueAsNumber)} />\n        </div>\n        <div>\n          Size:\n          <label> Same as source\n            <input type=\"checkbox\" checked={!isCustomSize} onChange={event => setIsCustomSize(!isCustomSize)} />\n          </label>\n          <label>\n            Width:\n            <input type=\"number\" disabled={!isCustomSize} name=\"width\" value={width} onChange={event => setWidth(event.target.valueAsNumber)} />\n          </label>\n          <label>\n            Height:\n            <input type=\"number\" disabled={!isCustomSize} name=\"height\" value={height} onChange={event => setHeight(event.target.valueAsNumber)} />\n          </label>\n          <span className=\"tooltip\">Use -1 for aspect ratio preserving scaling</span>\n        </div>\n        <div>\n          Extension:\n          <select value={extension} onChange={event => setExtension(event.target.value)}>\n            <option>mp4</option>\n            <option>mov</option>\n            <option>avi</option>\n            <option>mpeg</option>\n            <option>wmv</option>\n            <option>gif</option>\n          </select>\n        </div>\n        <div>\n          Compression preset: \n          <label><input type=\"radio\" value=\"ultrafast\" checked={preset === \"ultrafast\"} onChange={event => setPreset(event.target.value)} />Ultrafast</label>\n          <label><input type=\"radio\" value=\"superfast\" checked={preset === \"superfast\"} onChange={event => setPreset(event.target.value)} />Superfast</label>\n          <label><input type=\"radio\" value=\"veryfast\" checked={preset === \"veryfast\"} onChange={event => setPreset(event.target.value)} />Veryfast</label>\n          <label><input type=\"radio\" value=\"faster\" checked={preset === \"faster\"} onChange={event => setPreset(event.target.value)} />Faster</label>\n          <label><input type=\"radio\" value=\"fast\" checked={preset === \"fast\"} onChange={event => setPreset(event.target.value)} />Fast</label>\n          <label><input type=\"radio\" value=\"medium\" checked={preset === \"medium\"} onChange={event => setPreset(event.target.value)} />Medium</label>\n          <label><input type=\"radio\" value=\"slow\" checked={preset === \"slow\"} onChange={event => setPreset(event.target.value)} />Slow</label>\n          <label><input type=\"radio\" value=\"slower\" checked={preset === \"slower\"} onChange={event => setPreset(event.target.value)} />Slower</label>\n        </div>\n        <div>\n          CRF: <input type=\"range\" name=\"CRF\" min=\"0\" max=\"51\" value={crfValue} onChange={event => setCrfValue(event.target.valueAsNumber)}></input> {crfValue} <span className=\"tooltip\">0 is loseless, 51 is worst</span>\n        </div>\n        <div>\n          <input type=\"submit\" value=\"Convert\" onClick={event => {event.preventDefault(); handleConvert();}} />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}